if(!require("rio")) install.packages("rio")
if(!require("readr")) install.packages("readr")
if(!require("data.table")) install.packages("data.table")
if(!require("WDI")) install.packages("WDI")
library(rio)
library(readr)
library(data.table)
library(WDI)

If the open database is txet file or csv file, we can use 
#data <-read.table('file or link',header=value,sep="delimter or ,",row.names="names")
#data <-read.csv(file,header=TRUE,sep=”,”,row.names=”name”)

If the database using excel
we have severl choices: gdata, XLConnect, xlsReadWrite
library(RODBC)
#channel <- odbcConnectExcel("student.xls")
#mydataframe<-sqlFetch(channel,"Sheet1")
#odbcClose(channel)

If the database using xml, we can use the package xml.

If we want to get some information from the web, one way is using readlines() to downliad the webpage, and using grep() and gsub() to analyze it. Or we can use RCurl and XML package to get.

If we download as output of spss or sas, we can use two package.
library(Hmisc)
#data <-spss.get('data.sav or link',use.value.label=TRUE)
install.packages("sas7bdat")
library(sas7bdat)
#sasdata <- read.sas7bdat("sales.sas7bdat")

If we want to download data from other database server: like SQL Serve, MySQL, Oracle, DB2, using RODBC package is a convenient way. We need database name, username and password to connect to it.

###
#library(RMySQL)
#criterions_cite <- function(){
	#set connection
	conn <- dbConnect(MySQL(), dbname = 'project_name', username = 'xxx', password = 'xxxxxxxxx', host = '192.168.1.200', port = 3306)
	filter_statements <- paste0('SELECT * FROM sheet_name where distinguish = 1 and deleted = 1')
	res <- dbSendQuery(conn, filter_statements)
	#select data, -1 is all, if 3 means first three row
	dat <- dbFetch(res, -1)
	#closeRMySQL
	dbClearResult(dbListResults(conn)[[1]])
	dbDisconnect(conn)
	return(dat)
#}
###

If the data was saved in a zip file, we can also using R to download and unzip it. gzip
#temp <- tempfile()download.file("http://www.newcl.org/data/zipfiles/a1.zip",temp)
#data <- read.table(unz(temp, "a1.dat"))unlink(temp)

library("WDI")
WDIsearch("CO2") # search for data on a topic
co2_transport = WDI(indicator = "EN.CO2.TRAN.ZS") # import data

Moreover, we can also use R to download these files and then import them into R.
、、、{r, echo=ture}
url = "https://vincentarelbundock.github.io/Rdatasets/csv/datasets/co2.csv"
download.file(url, "extdata/co2.csv")
df_co2 = read_csv("extdata/co2.csv")

url = "https://www.monetdb.org/sites/default/files/voc_tsvs.zip"
download.file(url, "voc_tsvs.zip") # download file
unzip("voc_tsvs.zip", exdir = "data") # unzip files
file.remove("voc_tsvs.zip") # tidy up by removing the zip file
、、、

https://www.jianshu.com/p/4ea320c0dcc6
https://csgillespie.github.io/efficientR/input-output.html#prerequisites-4